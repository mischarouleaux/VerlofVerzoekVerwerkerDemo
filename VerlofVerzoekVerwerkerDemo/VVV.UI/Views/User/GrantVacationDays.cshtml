@model VVV.UI.ViewModels.User.GrantVacationDaysModel
@using VVV.UI.Helpers;

@{
    ViewBag.Title = "GrantVacationDays";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    .error {
        border: 1px solid #b94a48 !important;
        background-color: #fee !important;
    }
</style>


@if (SecurityHelper.CurrentIdentity.IsAuthenticated)
{
    using (Html.BeginForm("GrantVacationDays", "User", FormMethod.Post, new { @class = "form-horizontal" }))
    {
        @Html.AntiForgeryToken()

        <div class="col-md-12 row">

            <div class="col-md-12 headerkembit">
                <div class="col-md-12">
                    <h3><strong>Verlofdagen toekennen</strong></h3>
                    <hr />
                </div>
            </div>

            <div class="col-md-12">
                <i class="fa fa-danger"><h5>@Html.Partial("Partials/_Message")</h5></i>
            </div>

            <form>
                <div class="col-md-12 containerkembit">
                    <div class="col-md-12" style="margin-bottom:10px;">
                        <div class="col-md-12">
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.SearchQuery, new { htmlAttributes = new { @class = "form-control", placeholder = "Zoeken", autocomplete = "off", style = "width: 100%" } })                                
                            </div>
                            <div class="col-md-4">
                                <button type="submit" value="filter" name="filterbutton" class="btn" style="width:100%;"><span class="glyphicon glyphicon-search"></span></button>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="col-md-12">
                            <div class="col-md-2">
                                @Html.EditorFor(p => p.IsApplications, new { htmlAttributes = new { @class = "checkbox" } })
                            </div>
                            <label class="col-md-10 control-label" style="text-align:left;">IT Applications</label>                            
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="col-md-12">
                            <div class="col-md-2">
                                @Html.EditorFor(p => p.IsServices, new { htmlAttributes = new { @class = "checkbox" } })
                            </div>
                            <label class="col-md-10 control-label" style="text-align:left;">IT Services</label>                            
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="col-md-12">
                            <div class="col-md-2">
                                @Html.EditorFor(p => p.IsKnowledgeCenter, new { htmlAttributes = new { @class = "checkbox" } })
                            </div>
                            <label class="col-md-10 control-label" style="text-align:left;">IT Knowledge Center</label>                            
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="col-md-12">
                            <div class="col-md-2">
                                @Html.EditorFor(p => p.IsConsultancy, new { htmlAttributes = new { @class = "checkbox" } })
                            </div>
                            <label class="col-md-10 control-label" style="text-align:left;">IT Consultancy</label>                            
                        </div>
                    </div>
                    <div class="col-md-12">
                        <hr />
                    </div>                    
                    <div class="col-md-6">
                        <div class="col-md-12">
                            <div class="col-md-12">
                                <label>Medewerkers *</label>
                                @Html.DropDownListFor(model => model.SelectedID, (MultiSelectList)Model.Users, new { @class = "form-control textbox", multiple = "multiple", size = "10px", style = "width:100%;", data_msg_required = "Selecteer minimaal één gebruiker.", data_rule_required = "true" })
                            </div>                           
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="col-md-12">
                            <div class="col-md-12">
                                <h5>Aantal dagen toevoegen/aftrekken *</h5>
                                @Html.EditorFor(model => model.Days, new { htmlAttributes = new { @class = "form-control", @id = "OnlyNumbers",  @Value = "0", placeholder = "Aantal dagen", data_msg_required = "Geef het aantal dagen dat u wilt toevoegen aan, één dag verlof staat gelijk aan 8 uur.", data_rule_required = "true",  data_msg_max = "U kunt niet meer dan 100 verlofdagen toekennen", data_rule_max = "100", data_msg_min = "U kunt niet meer dan 100 verlofdagen aftrekken", data_rule_min = "-100" } })
                            </div>
                            <div class="col-md-12">
                                <h5>Aantal uren toevoegen/ aftrekken *</h5>
                                @Html.EditorFor(model => model.Hours, new { htmlAttributes = new { @class = "form-control", @id = "OnlyNumbers1", @Value = "0", placeholder = "Aantal uren", data_msg_required = "Geef het aantal uur aan dat u wilt toevoegen.", data_rule_required = "true", data_msg_max = "U kunt niet meer dan 800 verlofuren toekennen", data_rule_max = "800", data_msg_min = "U kunt niet meer dan 800 verlofuren aftrekken", data_rule_min = "-800" } })
                            </div>
                            <div class="col-md-12">
                                <h5>Aantal minuten toevoegen/ aftrekken *</h5>
                                @Html.EditorFor(model => model.Minutes, new { htmlAttributes = new { @class = "form-control", @id = "OnlyNumbers2", @Value = "0", placeholder = "Aantal minuten", data_msg_required = "Geef het aantal minuten aan dat u wilt toevoegen.", data_rule_required = "true", data_msg_max = "U kunt niet meer dan 48.000 verlofminuten toekennen", data_rule_max = "48000", data_msg_min = "U kunt niet meer dan 48.000 verlofminuten aftrekken", data_rule_min = "-48000" } })
                            </div>
                        </div>                        
                    </div>

                    <div class="col-md-12">
                        <div class="col-md-12">
                            <hr />
                            <div class="col-md-6">
                                <button type="submit" class="btn btn-success" id="button" style="margin-top:10px; width:100%;"><i class="fa fa-save"></i> Opslaan</button>
                            </div>
                            <div class="col-md-6">
                                <a class="btn btn-default" href="@(Url.Action("IndexHR", "User"))" style="margin-top:10px; width:100%"><i class="fa fa-save"></i>Annuleren</a>
                            </div>


                        </div>
                    </div>
                </div>
            </form>
            


        </div>
 
    }
}


@section scripts{
    <script src="//ajax.aspnetcdn.com/ajax/jQuery.validate/1.11.1/jquery.validate.js" type="text/javascript"></script>
    <script type="text/javascript">     

        $("#OnlyNumbers").keypress(function (e) {
            if (e.which < 48 || e.which > 58) {
                if (e.which == 45)
                {
                    return true
                }
                e.preventDefault();
            }
        });
        $("#OnlyNumbers1").keypress(function (e) {
            if (e.which < 48 || e.which > 58) {
                if (e.which == 45)
                {
                    return true
                }
                e.preventDefault();
            }
        });
        $("#OnlyNumbers2").keypress(function (e) {
            if (e.which < 48 || e.which > 58) {
                if (e.which == 45)
                {
                    return true
                }
                e.preventDefault();
            }
        });
        $('#button').click(function () {
            $("form").validate({

                showErrors: function (errorMap, errorList) {
                    // Clean up any tooltips for valid elements
                    $.each(this.validElements(), function (index, element) {
                        var $element = $(element);
                        $element.data("title", "") // Clear the title - there is no error associated anymore
                            .removeClass("error")
                            .tooltip("destroy");
                    });
                    // Create new tooltips for invalid elements
                    $.each(errorList, function (index, error) {
                        var $element = $(error.element);
                        $element.tooltip("destroy") // Destroy any pre-existing tooltip so we can repopulate with new tooltip content
                            .data("title", error.message)
                            .addClass("error")
                            .tooltip(); // Create a new tooltip based on the error messsage we just set in the title
                    });
                },

            });
        });
        

    </script>}